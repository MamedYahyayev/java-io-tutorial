InputStream

InputStream is an abstract class, it can't be instantiated, it is a base class of all input streams.
InputStream reads data one byte at a time.

read() - this method reads the bytes one at a time and it will returns -1 if there are no more bytes.

read(byte[] b) - this method reads the bytes then will store it in the byte[] array which is b.

read(byte[] b,int off, int len) - this method also do same job, but it will writes value to byte[] array according to off and len parameter
off - this is starting position of byte[] array
len - how many bytes do it read into byte[] array

For example:
inputStream.read(b, 2, 3);
off - 2 (starting position)
len - 3 (how many bytes do it read into byte[] array)
0 0 49 50 51 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0


readAllBytes() - this method reads all of bytes in the file, it is faster than other read method, it returns byte[] array

available() - Returns an estimate of the number of bytes that can be read

skip(int n) - this method skip the number of bytes, it will return long value which is the skipped bytes number
For example,
this is the result before skipping:             49 50 51 52 53 54 55 55 56 56 57 48 97 49 50 51 52 50 49 33
this is the result after skipping 3 elements:   52 53 54 55 55 56 56 57 48 97 49 50 51 52 50 49 33


skipNBytes(int n) - this method does same job as skip(int n)  but it won't return anything this method type is void




OutputStream

write(int n)
write(byte[] b) - this is faster than write(int n)
flush()
When you write data to a stream, it is not written immediately, and it is buffered. 
So use flush() when you need to be sure that all your data from buffer is written.
We need to be sure that all the writes are completed before we close the stream, and that is why flush() is called in file
